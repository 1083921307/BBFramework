{"version":3,"sources":["assets\\framework\\log\\AppLog.ts"],"names":[],"mappings":";;;;;;AACA;IAAA;IA+GA,CAAC;IA9GG,OAAO;IACA,aAAG,GAAV,UAAW,GAAW;QAClB,IAAI,EAAE,CAAC,SAAS,KAAK,KAAK,EAAE;YACxB,OAAO;SACV;QACD,IAAI,EAAE,CAAC,QAAQ,IAAI,EAAE,CAAC,GAAG,CAAC,KAAK,EAAE;YAC7B,SAAS,CAAC,SAAS,CAAC,YAAU,SAAS,CAAC,aAAa,EAAE,SAAI,EAAE,CAAC,EAAE,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,EAAE,SAAS,CAAC,SAAI,SAAS,CAAC,KAAK,CAAC,CAAC,CAAG,CAAC,CAAC;SAC5H;QACD,EAAE,CAAC,GAAG,CAAC,SAAS,CAAC,aAAa,EAAE,EAAE,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,EAAE,SAAS,CAAC,CAAC,CAAC;IAChG,CAAC;IAGM,cAAI,GAAX,UAAY,GAAG;QACX,IAAI,EAAE,CAAC,SAAS,KAAK,KAAK,EAAE;YACxB,OAAO;SACV;QACD,IAAI,EAAE,CAAC,QAAQ,IAAI,EAAE,CAAC,GAAG,CAAC,IAAI,EAAE;YAC5B,SAAS,CAAC,SAAS,CAAC,YAAU,SAAS,CAAC,aAAa,EAAE,SAAI,EAAE,CAAC,EAAE,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,EAAE,SAAS,CAAC,SAAI,SAAS,CAAC,KAAK,CAAC,CAAC,CAAG,CAAC,CAAC;SAC5H;QACD,EAAE,CAAC,GAAG,CAAC,SAAS,GAAG,EAAE,CAAC,EAAE,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,EAAE,SAAS,CAAC,EAAE,gBAAgB,EAAE,SAAS,CAAC,aAAa,EAAE,EAAE,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IAC9H,CAAC;IAGD,QAAQ;IACD,cAAI,GAAX,UAAY,GAAW;QACnB,IAAI,EAAE,CAAC,SAAS,KAAK,KAAK,EAAE;YACxB,OAAO;SACV;QACD,IAAI,EAAE,CAAC,QAAQ,IAAI,EAAE,CAAC,GAAG,CAAC,KAAK,EAAE;YAC7B,SAAS,CAAC,SAAS,CAAC,YAAU,SAAS,CAAC,aAAa,EAAE,SAAI,EAAE,CAAC,EAAE,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,EAAE,SAAS,CAAC,SAAI,SAAS,CAAC,KAAK,CAAC,CAAC,CAAG,CAAC,CAAC;SAC5H;QACD,EAAE,CAAC,GAAG,CAAC,SAAS,GAAG,EAAE,CAAC,EAAE,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,EAAE,SAAS,CAAC,EAAE,gBAAgB,EAAE,SAAS,CAAC,aAAa,EAAE,EAAE,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IAC9H,CAAC;IAED,QAAQ;IACD,cAAI,GAAX,UAAY,GAAW;QACnB,IAAI,EAAE,CAAC,SAAS,KAAK,KAAK,EAAE;YACxB,OAAO;SACV;QACD,IAAI,EAAE,CAAC,QAAQ,IAAI,EAAE,CAAC,GAAG,CAAC,KAAK,EAAE;YAC7B,SAAS,CAAC,SAAS,CAAC,YAAU,SAAS,CAAC,aAAa,EAAE,SAAI,EAAE,CAAC,EAAE,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,EAAE,SAAS,CAAC,SAAI,SAAS,CAAC,KAAK,CAAC,CAAC,CAAG,CAAC,CAAC;SAC5H;QACD,EAAE,CAAC,GAAG,CAAC,SAAS,GAAG,EAAE,CAAC,EAAE,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,EAAE,SAAS,CAAC,EAAE,WAAW,EAAE,SAAS,CAAC,aAAa,EAAE,EAAE,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IACzH,CAAC;IAGM,mBAAS,GAAhB,UAAiB,GAAG;QAChB,EAAE,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC;QAC9B,IAAI,EAAE,CAAC,QAAQ,CAAC,MAAM,KAAK,GAAG,EAAE;YAC5B,EAAE,CAAC,QAAQ,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;SAC9B;IACL,CAAC;IAEM,uBAAa,GAApB;QACI,IAAI,CAAC,GAAG,IAAI,IAAI,EAAE,CAAC;QACnB,IAAI,GAAG,GAAG,CAAC,CAAC,QAAQ,EAAE,GAAG,EAAE,CAAC;QAC5B,IAAI,OAAO,GAAG,EAAE,CAAC;QACjB,OAAO,IAAI,CAAC,GAAG,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC;QACxD,GAAG,GAAG,CAAC,CAAC,UAAU,EAAE,GAAG,EAAE,CAAC;QAC1B,OAAO,IAAI,CAAC,GAAG,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC;QACxD,GAAG,GAAG,CAAC,CAAC,UAAU,EAAE,GAAG,EAAE,CAAC;QAC1B,OAAO,IAAI,CAAC,GAAG,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC;QACxD,GAAG,GAAG,CAAC,CAAC,eAAe,EAAE,GAAG,EAAE,CAAC;QAC/B,IAAI,GAAG,CAAC,MAAM,KAAK,CAAC;YAAE,GAAG,GAAG,IAAI,GAAG,GAAG,CAAC;QACvC,IAAI,GAAG,CAAC,MAAM,KAAK,CAAC;YAAE,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;QACtC,OAAO,IAAI,GAAG,CAAC;QACf,OAAO,GAAG,GAAG,GAAG,OAAO,GAAG,GAAG,CAAC;QAC9B,OAAO,OAAO,CAAC;IACnB,CAAC;IAEa,oBAAU,GAAxB;QACI,IAAI,CAAC,GAAG,IAAI,KAAK,EAAE,CAAC;QACpB,IAAI,KAAK,GAAG,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QAChC,KAAK,CAAC,KAAK,EAAE,CAAC;QACd,KAAK,CAAC,OAAO,CAAC,UAAC,IAAI;YACf,EAAE,CAAC,GAAG,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;QAC1B,CAAC,CAAC,CAAC;IACP,CAAC;IAEa,eAAK,GAAnB,UAAoB,KAAK;QACrB,IAAI,CAAC,GAAG,IAAI,KAAK,EAAE,CAAC;QACpB,IAAI,KAAK,GAAG,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QAChC,KAAK,CAAC,KAAK,EAAE,CAAC;QACd,IAAI,MAAM,GAAG,EAAE,CAAC;QAChB,KAAK,CAAC,OAAO,CAAC,UAAC,IAAI;;YACf,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;YACzB,IAAI,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YAChC,IAAI,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE;gBACtB,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;aAC7B;iBAAM;gBACH,MAAM,CAAC,IAAI,WAAG,GAAC,SAAS,CAAC,CAAC,CAAC,IAAG,SAAS,CAAC,CAAC,CAAC,MAAG,CAAC;aACjD;QACL,CAAC,CAAC,CAAC;QAEH,IAAI,IAAI,GAAG,EAAE,CAAC;QACd,IAAI,KAAK,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;YAC5B,KAAK,IAAI,CAAC,IAAI,MAAM,CAAC,KAAK,CAAC,EAAE;gBACzB,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;aAChB;SACJ;QAED,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;YACjB,IAAI,SAAS,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YACnC,IAAI,SAAS,CAAC,MAAM,IAAI,CAAC,EAAE;gBACvB,OAAO,CAAC,GAAG,GAAG,SAAS,CAAC,CAAC,CAAC,GAAG,OAAO,GAAG,SAAS,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC;aAC9D;SACJ;QAED,OAAO,EAAE,CAAC;IACd,CAAC;IACL,gBAAC;AAAD,CA/GA,AA+GC,IAAA","file":"","sourceRoot":"/","sourcesContent":["\r\nexport default class LogHelper {\r\n    // 普通输出\r\n    static log(msg: string) {\r\n        if (bb.logEnable === false) {\r\n            return;\r\n        }\r\n        if (bb.logLevel >= bb.LOG.NOMAL) {\r\n            LogHelper.pushCache(`#FFFFFF${LogHelper.getDateString()} ${cc.js.formatStr.apply(cc, arguments)} ${LogHelper.stack(2)}`);\r\n        }\r\n        cc.log(LogHelper.getDateString(), LogHelper.stack(2), cc.js.formatStr.apply(cc, arguments));\r\n    }\r\n\r\n\r\n    static info(msg) {\r\n        if (bb.logEnable === false) {\r\n            return;\r\n        }\r\n        if (bb.logLevel >= bb.LOG.INFO) {\r\n            LogHelper.pushCache(`#00CD00${LogHelper.getDateString()} ${cc.js.formatStr.apply(cc, arguments)} ${LogHelper.stack(2)}`);\r\n        }\r\n        cc.log(\"%c%s%s:\" + cc.js.formatStr.apply(cc, arguments), \"color:#00CD00;\", LogHelper.getDateString(), LogHelper.stack(2));\r\n    }\r\n\r\n\r\n    // 输出 警告\r\n    static logW(msg: string) {\r\n        if (bb.logEnable === false) {\r\n            return;\r\n        }\r\n        if (bb.logLevel >= bb.LOG.WARIN) {\r\n            LogHelper.pushCache(`#ee7700${LogHelper.getDateString()} ${cc.js.formatStr.apply(cc, arguments)} ${LogHelper.stack(2)}`);\r\n        }\r\n        cc.log(\"%c%s%s:\" + cc.js.formatStr.apply(cc, arguments), \"color:#ee7700;\", LogHelper.getDateString(), LogHelper.stack(2));\r\n    }\r\n\r\n    // 输出 错误\r\n    static logE(msg: string) {\r\n        if (bb.logEnable === false) {\r\n            return;\r\n        }\r\n        if (bb.logLevel >= bb.LOG.ERROR) {\r\n            LogHelper.pushCache(`#FF0000${LogHelper.getDateString()} ${cc.js.formatStr.apply(cc, arguments)} ${LogHelper.stack(2)}`);\r\n        }\r\n        cc.log(\"%c%s%s:\" + cc.js.formatStr.apply(cc, arguments), \"color:red\", LogHelper.getDateString(), LogHelper.stack(2));\r\n    }\r\n\r\n\r\n    static pushCache(msg) {\r\n        bb.logCache.splice(0, 0, msg);\r\n        if (bb.logCache.length === 400) {\r\n            bb.logCache.splice(399, 1);\r\n        }\r\n    }\r\n\r\n    static getDateString() {\r\n        let d = new Date();\r\n        let str = d.getHours() + \"\";\r\n        let timeStr = \"\";\r\n        timeStr += (str.length === 1 ? (\"0\" + str) : str) + \":\";\r\n        str = d.getMinutes() + \"\";\r\n        timeStr += (str.length === 1 ? (\"0\" + str) : str) + \":\";\r\n        str = d.getSeconds() + \"\";\r\n        timeStr += (str.length === 1 ? (\"0\" + str) : str) + \".\";\r\n        str = d.getMilliseconds() + \"\";\r\n        if (str.length === 1) str = \"00\" + str;\r\n        if (str.length === 2) str = \"0\" + str;\r\n        timeStr += str;\r\n        timeStr = '[' + timeStr + ']';\r\n        return timeStr;\r\n    }\r\n\r\n    public static printStack() {\r\n        let e = new Error();\r\n        let lines = e.stack.split('\\n');\r\n        lines.shift();\r\n        lines.forEach((line) => {\r\n            cc.log('line:', line);\r\n        });\r\n    }\r\n\r\n    public static stack(index) {\r\n        let e = new Error();\r\n        let lines = e.stack.split(\"\\n\");\r\n        lines.shift();\r\n        let result = [];\r\n        lines.forEach((line) => {\r\n            line = line.substring(7);\r\n            let lineBreak = line.split(\" \");\r\n            if (lineBreak.length < 2) {\r\n                result.push(lineBreak[0]);\r\n            } else {\r\n                result.push({ [lineBreak[0]]: lineBreak[1] });\r\n            }\r\n        });\r\n\r\n        let list = [];\r\n        if (index <= result.length - 1) {\r\n            for (let a in result[index]) {\r\n                list.push(a);\r\n            }\r\n        }\r\n\r\n        if (list.length > 0) {\r\n            let splitList = list[0].split(\".\");\r\n            if (splitList.length >= 2) {\r\n                return (\"[\" + splitList[0] + \".js->\" + splitList[1] + \"]\");\r\n            }\r\n        }\r\n\r\n        return \"\";\r\n    }\r\n}"]}