{"version":3,"sources":["assets\\framework\\scene\\SceneManager.ts"],"names":[],"mappings":";;;;;;AAAA;IAUI;QAAA,iBAmBC;QApBD,iBAAY,GAAa,IAAI,CAAC;QAE1B,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,QAAQ,CAAC,0BAA0B,EAAE,UAAC,KAAK,EAAE,GAAG;YAC9D,IAAI,CAAC,KAAI,CAAC,YAAY,EAAE;gBACpB,OAAO;aACV;YAED,EAAE,CAAC,QAAQ,CAAC,eAAe,CAAC,KAAI,CAAC,YAAY,CAAC,CAAC;YAC/C,KAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QAC7B,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,QAAQ,CAAC,wBAAwB,EAAE,UAAC,KAAoB;YACtE,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,EAAE;gBACxB,KAAI,CAAC,YAAY,GAAG,IAAI,CAAC;gBACzB,OAAO;aACV;YACD,KAAI,CAAC,YAAY,GAAG,KAAK,CAAC,cAAc,CAAC,CAAC;YAC1C,EAAE,CAAC,QAAQ,CAAC,cAAc,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC,CAAC;YAClD,EAAE,CAAC,QAAQ,CAAC,EAAE,EAAE,CAAC;QACrB,CAAC,CAAC,CAAC;IACP,CAAC;IA3BM,wBAAW,GAAlB;QACI,IAAI,YAAY,CAAC,cAAc,IAAI,IAAI,EAAE;YACrC,YAAY,CAAC,cAAc,GAAG,IAAI,YAAY,EAAE,CAAC;SACpD;QACD,OAAO,YAAY,CAAC,cAAc,CAAC;IACvC,CAAC;IAwBD,gCAAS,GAAT,UAAU,KAAa,EAAE,IAAS;QAC9B,EAAE,CAAC,QAAQ,CAAC,YAAY,CAAC,KAAK,EAAE,UAAC,GAAG,EAAE,UAAU;YAC5C,IAAI,GAAG,EAAE;gBACL,EAAE,CAAC,GAAG,CAAC,6CAAa,GAAG,MAAG,CAAC,CAAC;gBAC5B,OAAO;aACV;YACD,EAAE,CAAC,QAAQ,CAAC,SAAS,CAAC,KAAK,EAAE,UAAC,GAAG,EAAE,QAAQ;gBACvC,IAAI,UAAU,GAAG,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC;gBAClD,IAAI,SAAS,GAAG,UAAU,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;gBAClD,IAAI,SAAS,GAAG,IAAI,EAAE,CAAC,SAAS,EAAE,CAAC;gBACnC,SAAS,CAAC,IAAI,GAAG,IAAI,CAAC;gBACtB,SAAS,CAAC,IAAI,GAAG,KAAK,CAAC;gBACvB,SAAS,CAAC,aAAa,GAAG,SAAS,CAAC;gBACpC,SAAS,CAAC,aAAa,CAAC,WAAW,CAAC,GAAG,SAAS,CAAC;gBACjD,SAAS,CAAC,aAAa,CAAC,UAAU,CAAC,EAAE,CAAC;gBACtC,SAAS,CAAC,aAAa,CAAC,SAAS,CAAC,EAAE,CAAC;YACzC,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACP,CAAC;IAhDM,2BAAc,GAAiB,IAAI,CAAC;IAiD/C,mBAAC;CAlDD,AAkDC,IAAA;kBAlDoB,YAAY","file":"","sourceRoot":"/","sourcesContent":["export default class SceneManager {\r\n    static singleInstance: SceneManager = null;\r\n    static getInstance(): SceneManager {\r\n        if (SceneManager.singleInstance == null) {\r\n            SceneManager.singleInstance = new SceneManager();\r\n        }\r\n        return SceneManager.singleInstance;\r\n    }\r\n\r\n    dependAssets: string[] = null;\r\n    constructor() {\r\n        cc.director.on(cc.Director.EVENT_BEFORE_SCENE_LOADING, (event, dat)=> {\r\n            if (!this.dependAssets) {\r\n                return;\r\n            }\r\n            \r\n            bb.UILoader.releaseArrayRes(this.dependAssets);\r\n            this.dependAssets = null;\r\n        });\r\n\r\n        cc.director.on(cc.Director.EVENT_AFTER_SCENE_LAUNCH, (scene: cc.SceneAsset) => {\r\n            if (!scene[\"dependAssets\"]) {\r\n                this.dependAssets = null;\r\n                return;\r\n            }\r\n            this.dependAssets = scene[\"dependAssets\"];\r\n            bb.UILoader.retainArrayRes(scene[\"dependAssets\"]);\r\n            bb.UILoader.gc();\r\n        });\r\n    }\r\n\r\n    loadScene(scene: string, data: any) {\r\n        cc.director.preloadScene(scene, (err, sceneAsset) => {\r\n            if (err) {\r\n                cc.log(`[场景加载] 失败 ${err} `);\r\n                return;\r\n            }\r\n            cc.director.loadScene(scene, (err, newScene) => {\r\n                let components = newScene.children[0]._components;\r\n                let component = components[components.length - 1];\r\n                let sceneCtrl = new bb.SceneCtrl();\r\n                sceneCtrl.data = data;\r\n                sceneCtrl.name = scene;\r\n                sceneCtrl.logicComponet = component;\r\n                sceneCtrl.logicComponet[\"sceneCtrl\"] = sceneCtrl;\r\n                sceneCtrl.logicComponet[\"initBind\"]();\r\n                sceneCtrl.logicComponet[\"onEnter\"]();\r\n            }); \r\n        });\r\n    }\r\n}"]}