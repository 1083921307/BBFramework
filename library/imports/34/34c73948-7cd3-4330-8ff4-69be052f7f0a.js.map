{"version":3,"sources":["assets\\framework\\pool\\UserPool.ts"],"names":[],"mappings":";;;;;;AAAA;IAKI,kBAAY,MAAiB,EAAE,GAAW;QAFlC,YAAO,GAAW,CAAC,CAAC;QAGxB,IAAI,CAAC,IAAI,GAAG,IAAI,KAAK,EAAW,CAAC;QACjC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;YACzB,IAAI,IAAI,SAAA,CAAC;YACT,IAAI,EAAE,CAAC,YAAY,CAAC,EAAE;gBAClB,EAAE,CAAC,YAAY,CAAC,GAAG,KAAK,CAAC;gBACzB,IAAI,GAAG,EAAE,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;gBAC9B,EAAE,CAAC,YAAY,CAAC,GAAG,IAAI,CAAC;aAC3B;iBACI;gBACD,wDAAwD;gBACxD,IAAI,GAAG,EAAE,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;aACjC;YACD,IAAI,CAAC,QAAQ,CAAC,GAAG,EAAE,IAAI,CAAC,OAAO,CAAC;YAChC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SACxB;IACL,CAAC;IAED;;;OAGG;IACH,sBAAG,GAAH;QACI,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;YACtB,IAAI,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;YAC7B,OAAO,IAAI,CAAC;SACf;aAAM;YACH,IAAI,IAAI,SAAA,CAAC;YACT,IAAI,EAAE,CAAC,YAAY,CAAC,EAAE;gBAClB,EAAE,CAAC,YAAY,CAAC,GAAG,KAAK,CAAC;gBACzB,IAAI,GAAG,EAAE,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;gBACnC,EAAE,CAAC,YAAY,CAAC,GAAG,IAAI,CAAC;aAC3B;iBACI;gBACD,wDAAwD;gBACxD,IAAI,GAAG,EAAE,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;aACtC;YACD,IAAI,CAAC,QAAQ,CAAC,GAAG,EAAE,IAAI,CAAC,OAAO,CAAC;YAChC,OAAO,IAAI,CAAC;SACf;IACL,CAAC;IAED;;;OAGG;IACH,sBAAG,GAAH,UAAI,MAAe;QACf,MAAM,CAAC,cAAc,EAAE,CAAC;QACxB,MAAM,CAAC,gBAAgB,EAAE,CAAC;QAC1B,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE;YAChC,OAAO;SACV;QACD,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC3B,CAAC;IAED;;;OAGG;IACH,wBAAK,GAAL;QACI,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC;IAC5B,CAAC;IAED;;;OAGG;IACH,uBAAI,GAAJ;QACI,OAAO,IAAI,CAAC,OAAO,CAAC;IACxB,CAAC;IAED;;OAEG;IACH,wBAAK,GAAL;QACI,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,UAAC,MAAe,EAAE,KAAa;YAC7C,MAAM,CAAC,OAAO,EAAE,CAAC;QACrB,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;IACnB,CAAC;IACL,eAAC;AAAD,CAtFA,AAsFC,IAAA","file":"","sourceRoot":"/","sourcesContent":["export default class UserPool {\r\n    private pool : Array<cc.Node>;\r\n    private prefab: cc.Prefab;\r\n    private countId: number = 0;\r\n\r\n    constructor(prefab: cc.Prefab, num: number) {\r\n        this.pool = new Array<cc.Node>();\r\n        this.prefab = prefab;\r\n        for(var i = 0; i < num; i++) {\r\n            let node;\r\n            if (cc[\"supportJit\"]) {\r\n                cc[\"supportJit\"] = false;\r\n                node = cc.instantiate(prefab);\r\n                cc[\"supportJit\"] = true;\r\n            }\r\n            else {\r\n                // 如果是特殊的不支持 JIT 的平台，则不需要优化，也不能强制设置 cc.supportJit 为 true\r\n                node = cc.instantiate(prefab);\r\n            }\r\n            node[\"poolId\"] = ++this.countId;\r\n            this.pool.push(node);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @description 从缓存池中 取出 一个 node 对象\r\n     * @returns {cc.Node}  返回一个 node 对象\r\n     */\r\n    get(): cc.Node {\r\n        if (this.pool.length > 0) {\r\n            let node = this.pool.shift();\r\n            return node;\r\n        } else {\r\n            let node;\r\n            if (cc[\"supportJit\"]) {\r\n                cc[\"supportJit\"] = false;\r\n                node = cc.instantiate(this.prefab);\r\n                cc[\"supportJit\"] = true;\r\n            }\r\n            else {\r\n                // 如果是特殊的不支持 JIT 的平台，则不需要优化，也不能强制设置 cc.supportJit 为 true\r\n                node = cc.instantiate(this.prefab);\r\n            }\r\n            node[\"poolId\"] = ++this.countId;\r\n            return node; \r\n        }\r\n    }\r\n\r\n    /**\r\n     * @description 回收一个node节点到缓存池中\r\n     * @param target 回收的目标节点\r\n     */\r\n    put(target: cc.Node): void {\r\n        target.stopAllActions();\r\n        target.removeFromParent();\r\n        if (this.pool.indexOf(target) >= 0) {\r\n            return;\r\n        } \r\n        this.pool.push(target);\r\n    }\r\n\r\n    /**\r\n     * @description 返回缓存池还有多少个对象可以用\r\n     * @returns {Number} 缓存池还有多少个对象\r\n     */\r\n    count(): number{\r\n        return this.pool.length;\r\n    }\r\n\r\n    /**\r\n     * @description 返回缓存池一共产生了多少个对象\r\n     * @returns {Number} 缓存池一共产生了多少个对象\r\n     */\r\n    size(): number {\r\n        return this.countId;\r\n    }\r\n\r\n    /**\r\n     * @description 清楚缓存池对象\r\n     */\r\n    clear(): void {\r\n        this.pool.forEach((target: cc.Node, index: number) => {\r\n            target.destroy();\r\n        });\r\n        this.pool = [];\r\n    }\r\n}\r\n"]}