{"version":3,"sources":["assets\\script\\Test2.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["const {ccclass, property} = cc._decorator;\r\n@ccclass\r\nexport default class Test2 extends cc.Component {\r\n    @property(cc.Camera)\r\n    camera: cc.Camera = null;\r\n\r\n    @property(cc.Sprite)\r\n    sprite: cc.Sprite = null;\r\n\r\n    _canvas: any = null;\r\n    texture: any  = null;\r\n    start () {\r\n        // 对图片进行灰度处理\r\n        this.sprite.setState(1);\r\n        this.init();\r\n        this.scheduleOnce(() => {\r\n            this.createSprite();\r\n            var img = this.initImage();\r\n            this.showSprite(img);\r\n        }, 1);\r\n    }\r\n\r\n    init() {\r\n        let texture = new cc.RenderTexture();\r\n\r\n        let gl = cc.game[\"_renderContext\"];\r\n       \r\n        texture.initWithSize(this.sprite.node.width, this.sprite.node.height, gl.STENCIL_INDEX8);\r\n        this.camera.targetTexture = texture;\r\n        this.camera.node.position = this.sprite.node.position;\r\n        this.texture  = texture;\r\n        \r\n    }\r\n\r\n    initImage() {\r\n        var dataURL = this._canvas.toDataURL('image/png');\r\n        var img = document.createElement('img');\r\n        img.src = dataURL;\r\n        return img;\r\n    }\r\n  \r\n    createSprite() {\r\n        let width = this.texture.width;\r\n        let height = this.texture.height;\r\n        this.sprite.dstBlendFactor = cc.macro.ZERO;\r\n        if (!this._canvas) {\r\n            this._canvas = document.createElement('canvas');\r\n\r\n            this._canvas.width = width;\r\n            this._canvas.height = height;\r\n        }\r\n        else {\r\n            this.clearCanvas();\r\n        }\r\n        let ctx = this._canvas.getContext('2d');\r\n        this.camera.render();\r\n      \r\n        // 左上的为原点(一个像素存 4个 格子, 分别代表着 R G B A)\r\n        let data: Uint8Array = this.texture.readPixels();\r\n\r\n        \r\n\r\n        // write the render data\r\n        let rowBytes = width * 4; \r\n\r\n        for (let row = 0; row < height; row++) {\r\n            let srow = height - 1 - row;\r\n            // let srow =  row;\r\n            /**\r\n             * 1. 以指定的尺寸（以像素计）创建新的 ImageData 对象：\r\n             * @param width ImageData 对象的宽度，以像素计。\r\n             * @param height ImageData 对象的高度，以像素计。\r\n             * \r\n             * 2. 创建与指定的另一个 ImageData 对象尺寸相同的新 ImageData 对象（不会复制图像数据）：\r\n             * @param imageData ImageData 对象\r\n             */\r\n            let imageData = ctx.createImageData(width, 1);\r\n\r\n            // r  g  b a\r\n            let start = srow * (width) * 4;\r\n            for (let i = 0; i < rowBytes; i++) {\r\n                imageData.data[i] = data[start + i];\r\n            }\r\n\r\n            for (let offset = 0; offset< imageData.width % 4; offset++) {\r\n                let idx = offset * 4;\r\n                \r\n                if (imageData.data[idx] === 0 &&  imageData.data[idx + 1] === 0 &&   imageData.data[idx + 2] === 0 &&  imageData.data[idx + 3] === 255) {\r\n                    imageData.data[idx] = 0;\r\n                    imageData.data[idx + 1] = 0;\r\n                    imageData.data[idx + 2] = 0;\r\n                    imageData.data[idx + 3] = 255;\r\n                } else {\r\n                    imageData.data[idx] = 0;\r\n                    imageData.data[idx + 1] = 0;\r\n                    imageData.data[idx + 2] = 0;\r\n                    imageData.data[idx + 3] = 0;\r\n                }\r\n            }\r\n            /**\r\n             * 将图像数据（从指定的 ImageData 对象）放回画布上\r\n             * @param imageData 规定要放回画布的 ImageData 对象\r\n             * @param x\tImageData 对象左上角的 x 坐标，以像素计。\r\n             * @param y\tImageData 对象左上角的 y 坐标，以像素计。\r\n             * @param dirtyX\t可选。水平值（x），以像素计，在画布上放置图像的位置。\r\n             * @param dirtyY\t可选。水平值（y），以像素计，在画布上放置图像的位置。\r\n             * @param dirtyWidth\t可选。在画布上绘制图像所使用的宽度。\r\n             * @param dirtyHeight\t可选。在画布上绘制图像所使用的高度。\r\n             */\r\n            ctx.putImageData(imageData, 0, row);\r\n            this.sprite.dstBlendFactor = cc.macro.ONE_MINUS_SRC_ALPHA;\r\n        }\r\n        return this._canvas;\r\n    }\r\n\r\n    showSprite(img) {\r\n        let texture = new cc.Texture2D();\r\n        texture.initWithElement(img);\r\n\r\n        let spriteFrame = new cc.SpriteFrame();\r\n        spriteFrame.setTexture(texture);\r\n\r\n        let node = new cc.Node();\r\n        let sprite = node.addComponent(cc.Sprite)\r\n         \r\n        sprite.srcBlendFactor = cc.macro.SRC_ALPHA;\r\n        sprite.dstBlendFactor = cc.macro.ONE_MINUS_SRC_ALPHA;\r\n     \r\n        sprite.spriteFrame = spriteFrame;\r\n\r\n        node.zIndex = cc.macro.MAX_ZINDEX;\r\n        node.parent = cc.director.getScene();\r\n        // set position\r\n        let width = cc.winSize.width;\r\n        let height = cc.winSize.height;\r\n        node.x = width / 2;\r\n        node.y = height / 2;\r\n        node.on(cc.Node.EventType.TOUCH_START, () => {\r\n            node.parent = null;\r\n            node.destroy();\r\n        });\r\n\r\n        this.captureAction(node, width, height);\r\n    \r\n    }\r\n    captureAction(node, width, height) {\r\n        let scaleAction = cc.scaleTo(1,1);\r\n        let targetPos = cc.v2(width - width / 6,  height / 4);\r\n        let moveAction = cc.moveTo(1, targetPos); \r\n        let spawn = cc.spawn(scaleAction, moveAction);\r\n        node.runAction(spawn);\r\n    }\r\n\r\n    clearCanvas() {\r\n        let ctx = this._canvas.getContext('2d');\r\n        ctx.clearRect(0, 0, this._canvas.width, this._canvas.height);\r\n    }\r\n}\r\n"]}