{"version":3,"sources":["assets\\framework\\audio\\AudioManager.ts"],"names":[],"mappings":";;;;;;AAAA;;;;;;GAMG;AACH;IAuBI;QAdA,cAAS,GAAY,KAAK,CAAC;QAC3B,cAAS,GAAY,KAAK,CAAC;QAE3B,qBAAgB,GAAiB,IAAI,CAAC;QAEtC,YAAO,GAAwB,IAAI,CAAC;QAEpC,oBAAe,GAAW,CAAC,CAAC,CAAC;QAC7B,0BAAqB,GAAW,IAAI,CAAC;QAGrC,qBAAgB,GAAW,CAAC,CAAC,CAAC;QAC9B,2BAAsB,GAAW,IAAI,CAAC;QAGlC,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;IACtB,CAAC;IAvBM,wBAAW,GAAlB;QACI,IAAI,YAAY,CAAC,cAAc,IAAI,IAAI,EAAE;YACrC,YAAY,CAAC,cAAc,GAAG,IAAI,YAAY,EAAE,CAAC;SACpD;QACD,OAAO,YAAY,CAAC,cAAc,CAAC;IACvC,CAAC;IAoBD,sCAAe,GAAf,UAAgB,SAAkB;QAC9B,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;IAC/B,CAAC;IAED,sCAAe,GAAf,UAAgB,SAAkB;QAC9B,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;IAC/B,CAAC;IAED,yCAAkB,GAAlB,UAAmB,IAAY;QAA/B,iBAIC;QAHG,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,EAAE,EAAE,CAAC,SAAS,EAAE,UAAC,GAAS,EAAE,SAAuB;YACrE,KAAI,CAAC,gBAAgB,GAAG,SAAS,CAAC;QACtC,CAAC,CAAC,CAAC;IACP,CAAC;IAED,0CAAmB,GAAnB,UAAoB,MAAkB;QAAlB,uBAAA,EAAA,UAAkB;QAClC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,gBAAgB,EAAE,KAAK,EAAE,KAAK,CAAC,CAAA;IACxD,CAAC;IAED,uCAAgB,GAAhB,UAAiB,MAAc;QAC3B,EAAE,CAAC,WAAW,CAAC,gBAAgB,CAAC,MAAM,CAAC,CAAC;QACxC,IAAI,MAAM,KAAK,CAAC,EAAE;YACd,IAAI,CAAC,UAAU,EAAE,CAAA;SACpB;IACL,CAAC;IAED,qCAAc,GAAd,UAAe,MAAc;QACzB,EAAE,CAAC,WAAW,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;QACtC,IAAI,MAAM,KAAK,CAAC,EAAE;YACd,IAAI,CAAC,SAAS,EAAE,CAAC;SACpB;IACL,CAAC;IAED,gCAAS,GAAT;QACI,EAAE,CAAC,WAAW,CAAC,SAAS,EAAE,CAAC;IAC/B,CAAC;IAED,iCAAU,GAAV;QACI,IAAI,IAAI,CAAC,gBAAgB,GAAG,CAAC,EAAE;YAC3B,OAAO;SACV;QACD,EAAE,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;QACjD,IAAI,CAAC,gBAAgB,GAAG,CAAC,CAAC,CAAC;IAC/B,CAAC;IAED,gCAAS,GAAT,UAAU,SAAuB,EAAE,IAAa;QAAhD,iBAOC;QANG,IAAI,CAAC,qBAAqB,GAAG,SAAS,CAAC,SAAS,CAAC;QACjD,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC,WAAW,CAAC,SAAS,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;QACjE,EAAE,CAAC,WAAW,CAAC,iBAAiB,CAAC,IAAI,CAAC,eAAe,EAAG;YACpD,KAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC;YAClC,KAAI,CAAC,eAAe,GAAG,CAAC,CAAC,CAAC;QAC9B,CAAC,CAAC,CAAC;IACP,CAAC;IAED,oCAAa,GAAb,UAAc,IAAY,EAAE,IAAa;QAAzC,iBAQC;QAPG,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,EAAE,EAAE,CAAC,SAAS,EAAE,UAAC,GAAU,EAAE,SAAuB;YACtE,IAAI,GAAG,EAAE;gBACL,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;gBACrB,OAAO;aACV;YACD,KAAI,CAAC,SAAS,CAAC,SAAS,EAAE,IAAI,CAAC,CAAA;QACnC,CAAC,CAAC,CAAA;IACN,CAAC;IAED,iCAAU,GAAV,UAAW,SAAuB,EAAE,WAAoB,EAAE,IAAa;QACnE,IAAI,WAAW,EAAE;YACb,IAAI,CAAC,WAAW,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;YAClC,OAAO;SACV;QACD,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAC7B,IAAI,CAAC,WAAW,EAAE,CAAC;IACvB,CAAC;IAED,qCAAc,GAAd,UAAe,IAAY,EAAE,WAAoB;QAAjD,iBAQC;QAPG,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,EAAE,EAAE,CAAC,SAAS,EAAE,UAAC,GAAU,EAAE,SAAuB;YACtE,IAAI,GAAG,EAAE;gBACL,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;gBACrB,OAAO;aACV;YACD,KAAI,CAAC,UAAU,CAAC,SAAS,EAAE,WAAW,EAAE,IAAI,CAAC,CAAC;QAClD,CAAC,CAAC,CAAC;IACP,CAAC;IAED,kCAAW,GAAX,UAAY,SAA8B,EAAE,IAAqB;QAArD,0BAAA,EAAA,gBAA8B;QAAE,qBAAA,EAAA,YAAqB;QAC7D,IAAI,SAAS,EAAE;YACX,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;YACtB,OAAO;SACV;QACD,IAAI,eAAe,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC;QAC3C,IAAI,CAAC,eAAe,EAAE;YAClB,OAAO;SACV;QACD,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC;IAChC,CAAC;IAED,4BAAK,GAAL,UAAM,SAAuB;QAA7B,iBAQC;QAPG,IAAI,CAAC,sBAAsB,GAAG,SAAS,CAAC,SAAS,CAAC;QAClD,IAAI,CAAC,gBAAgB,GAAG,EAAE,CAAC,WAAW,CAAC,UAAU,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;QACpE,EAAE,CAAC,WAAW,CAAC,iBAAiB,CAAC,IAAI,CAAC,gBAAgB,EAAE;YACpD,KAAI,CAAC,gBAAgB,GAAG,CAAC,CAAC,CAAC;YAC3B,KAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC;YACnC,KAAI,CAAC,WAAW,EAAE,CAAC;QACvB,CAAC,CAAC,CAAC;IACP,CAAC;IAhIM,2BAAc,GAAiB,IAAI,CAAC;IAkI/C,mBAAC;CAnID,AAmIC,IAAA;kBAnIoB,YAAY","file":"","sourceRoot":"/","sourcesContent":["/**\r\n * @class AudioManager\r\n * @author 虣虣\r\n * @deprecated 音乐，音效管理模块\r\n * \r\n * TODO  暂时未实现保存\r\n */\r\nexport default class AudioManager {\r\n    static singleInstance: AudioManager = null;\r\n    static getInstance(): AudioManager {\r\n        if (AudioManager.singleInstance == null) {\r\n            AudioManager.singleInstance = new AudioManager();\r\n        }\r\n        return AudioManager.singleInstance;\r\n    }\r\n\r\n    soundMute: boolean = false;\r\n    effctMute: boolean = false;\r\n\r\n    _defaultBtnAudio: cc.AudioClip = null;\r\n\r\n    effects: Array<cc.AudioClip> = null;\r\n\r\n    _currentMusicId: number = -1;\r\n    _currentMusicCacheUrl: string = null;\r\n\r\n\r\n    _currentEffectId: number = -1;\r\n    _currentEffectCacheUrl: string = null;\r\n\r\n    constructor() {\r\n        this.effects = [];\r\n    }\r\n\r\n    switchEffctMute(soundMute: boolean) {\r\n        this.soundMute = soundMute;\r\n    }\r\n\r\n    switchSoundMute(effctMute: boolean) {\r\n        this.effctMute = effctMute;\r\n    }\r\n\r\n    setDefaultBtnAudio(path: string) {\r\n        cc.resources.load(path, cc.AudioClip, (err:Error, audioclip: cc.AudioClip) => {\r\n            this._defaultBtnAudio = audioclip;\r\n        });\r\n    }\r\n\r\n    playDefaultBtnAudio(volume: number = 1) {\r\n        this.playEffect(this._defaultBtnAudio, false, false)\r\n    }\r\n\r\n    setEffectsVolume(volume: number) {\r\n        cc.audioEngine.setEffectsVolume(volume);\r\n        if (volume === 0) {\r\n            this.stopEffect()\r\n        }\r\n    }\r\n\r\n    setMusicVolume(volume: number) {\r\n        cc.audioEngine.setMusicVolume(volume);\r\n        if (volume === 0) {\r\n            this.stopMusic();\r\n        }\r\n    }\r\n\r\n    stopMusic() {\r\n        cc.audioEngine.stopMusic();\r\n    }\r\n\r\n    stopEffect() {\r\n        if (this._currentEffectId < 0) {\r\n            return;\r\n        }\r\n        cc.audioEngine.stopEffect(this._currentEffectId);\r\n        this._currentEffectId = -1;\r\n    }\r\n    \r\n    playMusic(audioclip: cc.AudioClip, loop: boolean) {\r\n        this._currentMusicCacheUrl = audioclip.nativeUrl;\r\n        this._currentMusicId = cc.audioEngine.playMusic(audioclip, loop);\r\n        cc.audioEngine.setFinishCallback(this._currentMusicId , () =>{\r\n            this._currentMusicCacheUrl = null;\r\n            this._currentMusicId = -1;\r\n        });\r\n    }\r\n\r\n    playMusicSync(path: string, loop: boolean) {\r\n        cc.resources.load(path, cc.AudioClip, (err: Error, audioclip: cc.AudioClip) =>{\r\n            if (err) {\r\n                bb.logE(err.message);\r\n                return;\r\n            }\r\n            this.playMusic(audioclip, loop)\r\n        })\r\n    }\r\n    \r\n    playEffect(audioclip: cc.AudioClip, immediately: boolean, sync: boolean) {\r\n        if (immediately) {\r\n            this._playEffect(audioclip, sync);\r\n            return;\r\n        }\r\n        this.effects.push(audioclip);\r\n        this._playEffect();\r\n    }\r\n\r\n    playEffectSync(path: string, immediately: boolean) {\r\n        cc.resources.load(path, cc.AudioClip, (err: Error, audioclip: cc.AudioClip) => {\r\n            if (err) {\r\n                bb.logE(err.message);\r\n                return;\r\n            }\r\n            this.playEffect(audioclip, immediately, true);\r\n        });\r\n    }\r\n\r\n    _playEffect(audioclip: cc.AudioClip = null, sync: boolean = false) {\r\n        if (audioclip) {\r\n            this._play(audioclip);\r\n            return;\r\n        }\r\n        let audioclipObject = this.effects.shift();\r\n        if (!audioclipObject) {\r\n            return;\r\n        }\r\n        this._play(audioclipObject);\r\n    }\r\n\r\n    _play(audioclip: cc.AudioClip) {\r\n        this._currentEffectCacheUrl = audioclip.nativeUrl;\r\n        this._currentEffectId = cc.audioEngine.playEffect(audioclip, false);\r\n        cc.audioEngine.setFinishCallback(this._currentEffectId, () =>{\r\n            this._currentEffectId = -1;\r\n            this._currentEffectCacheUrl = null;\r\n            this._playEffect();\r\n        });\r\n    }\r\n\r\n}"]}