{"version":3,"sources":["assets\\framework\\net\\HttpManager.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["export default class HttpManager {\r\n    static singleInstance: HttpManager = null;\r\n    static getInstance(): HttpManager {\r\n        if (HttpManager.singleInstance == null) {\r\n            HttpManager.singleInstance = new HttpManager();\r\n        }\r\n        return HttpManager.singleInstance;\r\n    }\r\n\r\n\r\n    get(url, path, params, callback) {\r\n        var xhr = cc.loader.getXMLHttpRequest();\r\n        xhr.timeout = 5000;\r\n        var requestURL = url + path;\r\n        if (params) {\r\n            requestURL = requestURL + \"?\" + params;\r\n        }\r\n         \r\n        xhr.open(\"GET\",requestURL, true);\r\n        if (cc.sys.isNative){\r\n            xhr.setRequestHeader(\"Accept\", \"text/html\");\r\n            xhr.setRequestHeader(\"Accept-Charset\", \"utf-8\");\r\n            xhr.setRequestHeader(\"Accept-Encoding\", \"gzip,deflate\");\r\n        }\r\n\r\n        xhr.onreadystatechange = function() {\r\n            if(xhr.readyState === 4 && (xhr.status >= 200 && xhr.status < 300)){\r\n                console.log(\"http res(\"+ xhr.responseText.length + \"):\" + xhr.responseText);\r\n                try {\r\n                    var ret = xhr.responseText;\r\n                    if(callback !== null){\r\n                        callback(null, ret);\r\n                    }\r\n                    return;\r\n                } catch (e) {\r\n                    callback(e, null);\r\n                }\r\n            }\r\n            else {\r\n                callback(xhr.readyState + \":\" + xhr.status, null);\r\n            }\r\n        };\r\n        \r\n        xhr.send();\r\n        return xhr;\r\n    }\r\n\r\n    post(url, path, params, body, callback) {\r\n        var xhr = cc.loader.getXMLHttpRequest();\r\n        xhr.timeout = 5000;\r\n        var requestURL = url + path;\r\n        if (params) {\r\n            requestURL = requestURL + \"?\" + params;\r\n        }\r\n        xhr.open(\"POST\",requestURL, true);\r\n        if (cc.sys.isNative){\r\n            xhr.setRequestHeader(\"Accept\", \"text/html\");\r\n            xhr.setRequestHeader(\"Accept-Charset\", \"utf-8\");\r\n            xhr.setRequestHeader(\"Accept-Encoding\", \"gzip,deflate\");\r\n        }\r\n\r\n        if (body) {\r\n            xhr.setRequestHeader(\"Content-Type\", \"application/x-www-form-urlencoded\");\r\n            xhr.setRequestHeader(\"Content-Length\", body.length);\r\n        }\r\n        \r\n\r\n        xhr.onreadystatechange = function() {\r\n            if(xhr.readyState === 4 && (xhr.status >= 200 && xhr.status < 300)){\r\n                try {\r\n                    var ret = xhr.responseText;\r\n                    if(callback !== null){\r\n                        callback(null, ret);\r\n                    }\r\n                    return;\r\n                } catch (e) {\r\n                    callback(e, null);\r\n                }\r\n            }\r\n            else {\r\n                callback(xhr.readyState + \":\" + xhr.status, null);\r\n            }\r\n        };\r\n        if (body) {\r\n            xhr.send(body);\r\n        }\r\n        return xhr;\r\n    }\r\n\r\n    download(url, path, params, callback) {\r\n        var xhr = cc.loader.getXMLHttpRequest();\r\n        xhr.timeout = 5000;\r\n        var requestURL = url + path;\r\n        if (params) {\r\n            requestURL = requestURL + \"?\" + params;\r\n        }\r\n\r\n        xhr.responseType = \"arraybuffer\";  \r\n        xhr.open(\"GET\",requestURL, true);\r\n        if (cc.sys.isNative){\r\n            xhr.setRequestHeader(\"Accept\", \"text/html\");\r\n            xhr.setRequestHeader(\"Accept-Charset\", \"utf-8\");\r\n            xhr.setRequestHeader(\"Accept-Encoding\", \"gzip,deflate\");\r\n        }\r\n\r\n        xhr.onreadystatechange = function() {\r\n            if(xhr.readyState === 4 && (xhr.status >= 200 && xhr.status < 300)){\r\n                var buffer = xhr.response;\r\n                var dataview = new DataView(buffer);\r\n                var ints = new Uint8Array(buffer.byteLength);\r\n                for (var i = 0; i < ints.length; i++) {\r\n                    ints[i] = dataview.getUint8(i);\r\n                }\r\n                callback(null, ints);\r\n            }\r\n            else {\r\n                callback(xhr.readyState + \":\" + xhr.status, null);\r\n            }\r\n        };\r\n        xhr.send();\r\n        return xhr;\r\n    }\r\n}"]}